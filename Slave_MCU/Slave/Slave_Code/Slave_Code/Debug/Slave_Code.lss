
Slave_Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000048  00800060  00000b62  00000bf6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  008000a8  008000a8  00000c3e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c3e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  00000cac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026b4  00000000  00000000  00000eac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ce9  00000000  00000000  00003560  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001113  00000000  00000000  00004249  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004e0  00000000  00000000  0000535c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000114f  00000000  00000000  0000583c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012d5  00000000  00000000  0000698b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00007c60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__ctors_end>
   4:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__vector_1>
   8:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__vector_2>
   c:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <__vector_3>
  10:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  14:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  18:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  1c:	0c 94 34 05 	jmp	0xa68	; 0xa68 <__vector_7>
  20:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__vector_8>
  24:	0c 94 82 05 	jmp	0xb04	; 0xb04 <__vector_9>
  28:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  2c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  30:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  34:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  38:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  3c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  40:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  44:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  48:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  4c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  50:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  54:	4c 01       	movw	r8, r24
  56:	56 01       	movw	r10, r12
  58:	60 01       	movw	r12, r0
  5a:	6a 01       	movw	r12, r20
  5c:	74 01       	movw	r14, r8
  5e:	95 01       	movw	r18, r10
  60:	fe 00       	.word	0x00fe	; ????
  62:	fe 00       	.word	0x00fe	; ????
  64:	fe 00       	.word	0x00fe	; ????
  66:	fe 00       	.word	0x00fe	; ????
  68:	fe 00       	.word	0x00fe	; ????
  6a:	fe 00       	.word	0x00fe	; ????
  6c:	fe 00       	.word	0x00fe	; ????
  6e:	fe 00       	.word	0x00fe	; ????
  70:	fe 00       	.word	0x00fe	; ????
  72:	fe 00       	.word	0x00fe	; ????
  74:	51 01       	movw	r10, r2
  76:	5b 01       	movw	r10, r22
  78:	65 01       	movw	r12, r10
  7a:	6f 01       	movw	r12, r30
  7c:	79 01       	movw	r14, r18
  7e:	7e 01       	movw	r14, r28
  80:	fe 00       	.word	0x00fe	; ????
  82:	fe 00       	.word	0x00fe	; ????
  84:	fe 00       	.word	0x00fe	; ????
  86:	fe 00       	.word	0x00fe	; ????
  88:	fe 00       	.word	0x00fe	; ????
  8a:	fe 00       	.word	0x00fe	; ????
  8c:	fe 00       	.word	0x00fe	; ????
  8e:	fe 00       	.word	0x00fe	; ????
  90:	fe 00       	.word	0x00fe	; ????
  92:	fe 00       	.word	0x00fe	; ????
  94:	0b 01       	movw	r0, r22
  96:	16 01       	movw	r2, r12
  98:	21 01       	movw	r4, r2
  9a:	2c 01       	movw	r4, r24
  9c:	37 01       	movw	r6, r14
  9e:	42 01       	movw	r8, r4

000000a0 <__ctors_end>:
  a0:	11 24       	eor	r1, r1
  a2:	1f be       	out	0x3f, r1	; 63
  a4:	cf e5       	ldi	r28, 0x5F	; 95
  a6:	d8 e0       	ldi	r29, 0x08	; 8
  a8:	de bf       	out	0x3e, r29	; 62
  aa:	cd bf       	out	0x3d, r28	; 61

000000ac <__do_copy_data>:
  ac:	10 e0       	ldi	r17, 0x00	; 0
  ae:	a0 e6       	ldi	r26, 0x60	; 96
  b0:	b0 e0       	ldi	r27, 0x00	; 0
  b2:	e2 e6       	ldi	r30, 0x62	; 98
  b4:	fb e0       	ldi	r31, 0x0B	; 11
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x10>
  b8:	05 90       	lpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a8 3a       	cpi	r26, 0xA8	; 168
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0xc>

000000c2 <__do_clear_bss>:
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	a8 ea       	ldi	r26, 0xA8	; 168
  c6:	b0 e0       	ldi	r27, 0x00	; 0
  c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
  ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
  cc:	ab 3b       	cpi	r26, 0xBB	; 187
  ce:	b2 07       	cpc	r27, r18
  d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
  d2:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  d6:	0c 94 af 05 	jmp	0xb5e	; 0xb5e <_exit>

000000da <__bad_interrupt>:
  da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000de <LM35_Init>:
  de:	0e 94 ad 01 	call	0x35a	; 0x35a <ADC_Init>
  e2:	08 95       	ret

000000e4 <LM35_Read>:
  e4:	0e 94 b8 01 	call	0x370	; 0x370 <ADC_Read>
  e8:	96 95       	lsr	r25
  ea:	87 95       	ror	r24
  ec:	96 95       	lsr	r25
  ee:	87 95       	ror	r24
  f0:	08 95       	ret

000000f2 <Timer1_OV_Interrupt_Handler>:
		}
	}
}

void Timer1_OV_Interrupt_Handler(void){
	Interrupt_Counter++;
  f2:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <__data_end>
  f6:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <__data_end+0x1>
  fa:	a0 91 aa 00 	lds	r26, 0x00AA	; 0x8000aa <__data_end+0x2>
  fe:	b0 91 ab 00 	lds	r27, 0x00AB	; 0x8000ab <__data_end+0x3>
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	a1 1d       	adc	r26, r1
 106:	b1 1d       	adc	r27, r1
 108:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__data_end>
 10c:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__data_end+0x1>
 110:	a0 93 aa 00 	sts	0x00AA, r26	; 0x8000aa <__data_end+0x2>
 114:	b0 93 ab 00 	sts	0x00AB, r27	; 0x8000ab <__data_end+0x3>
	if(Interrupt_Counter == 4)
 118:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <__data_end>
 11c:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <__data_end+0x1>
 120:	a0 91 aa 00 	lds	r26, 0x00AA	; 0x8000aa <__data_end+0x2>
 124:	b0 91 ab 00 	lds	r27, 0x00AB	; 0x8000ab <__data_end+0x3>
 128:	04 97       	sbiw	r24, 0x04	; 4
 12a:	a1 05       	cpc	r26, r1
 12c:	b1 05       	cpc	r27, r1
 12e:	91 f5       	brne	.+100    	; 0x194 <Timer1_OV_Interrupt_Handler+0xa2>
	{
		Room_Temp_Now = LM35_Read(ADC_Channel1);
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	0e 94 72 00 	call	0xe4	; 0xe4 <LM35_Read>
 136:	80 93 ad 00 	sts	0x00AD, r24	; 0x8000ad <Room_Temp_Now>
		if(Room_Temp_Now >= Air_Cond_Temp_Now)
 13a:	90 91 ae 00 	lds	r25, 0x00AE	; 0x8000ae <Air_Cond_Temp_Now>
 13e:	89 17       	cp	r24, r25
 140:	a8 f0       	brcs	.+42     	; 0x16c <Timer1_OV_Interrupt_Handler+0x7a>
		{
			DIO_WriteChannel(DIO_ChannelD5,STD_High);
 142:	61 e0       	ldi	r22, 0x01	; 1
 144:	8d e1       	ldi	r24, 0x1D	; 29
 146:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelD0,STD_High);
 14a:	61 e0       	ldi	r22, 0x01	; 1
 14c:	88 e1       	ldi	r24, 0x18	; 24
 14e:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelD1,STD_Low);
 152:	60 e0       	ldi	r22, 0x00	; 0
 154:	89 e1       	ldi	r24, 0x19	; 25
 156:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			Interrupt_Counter = 0;
 15a:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__data_end>
 15e:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__data_end+0x1>
 162:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <__data_end+0x2>
 166:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <__data_end+0x3>
 16a:	08 95       	ret
		}
		else
		{
			DIO_WriteChannel(DIO_ChannelD5,STD_Low);
 16c:	60 e0       	ldi	r22, 0x00	; 0
 16e:	8d e1       	ldi	r24, 0x1D	; 29
 170:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelD0,STD_Low);
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	88 e1       	ldi	r24, 0x18	; 24
 178:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelD1,STD_High);
 17c:	61 e0       	ldi	r22, 0x01	; 1
 17e:	89 e1       	ldi	r24, 0x19	; 25
 180:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			Interrupt_Counter = 0;
 184:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__data_end>
 188:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__data_end+0x1>
 18c:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <__data_end+0x2>
 190:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <__data_end+0x3>
 194:	08 95       	ret

00000196 <main>:

u32 volatile Interrupt_Counter = 0;
void Timer1_OV_Interrupt_Handler(void);

int main(void)
{
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	cd b7       	in	r28, 0x3d	; 61
 19c:	de b7       	in	r29, 0x3e	; 62
 19e:	66 97       	sbiw	r28, 0x16	; 22
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	f8 94       	cli
 1a4:	de bf       	out	0x3e, r29	; 62
 1a6:	0f be       	out	0x3f, r0	; 63
 1a8:	cd bf       	out	0x3d, r28	; 61
	DIO_Init(); //Initialize DIO Pins of Slave MCU
 1aa:	0e 94 08 03 	call	0x610	; 0x610 <DIO_Init>
	GINT_EnableAllInterrupts();
 1ae:	0e 94 23 04 	call	0x846	; 0x846 <GINT_EnableAllInterrupts>
	SPI_ConfigTypes SPI_options = {Slave,MSB,SPIClock_64,DoupleSpeedDisable}; //Slave SPI Config Options
 1b2:	19 82       	std	Y+1, r1	; 0x01
 1b4:	1a 82       	std	Y+2, r1	; 0x02
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	8b 83       	std	Y+3, r24	; 0x03
 1ba:	1c 82       	std	Y+4, r1	; 0x04
	ADC_InitTypes ADC_Options = {ADC_Prescaler64, ADC_Vref_Internal}; //ADC Config Options
 1bc:	86 e0       	ldi	r24, 0x06	; 6
 1be:	8d 83       	std	Y+5, r24	; 0x05
 1c0:	83 e0       	ldi	r24, 0x03	; 3
 1c2:	8e 83       	std	Y+6, r24	; 0x06
	TIMER1_InitTypes Options = {Normal,Clock_64,COM1A_No_PWM,COM1B_No_PWM,OC1AInt_Disable,OC1BInt_Disable,ICInt_Disable, TOVInt_Enable}; //Timer one config for Air Cond On.
 1c4:	88 e0       	ldi	r24, 0x08	; 8
 1c6:	e0 ea       	ldi	r30, 0xA0	; 160
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	de 01       	movw	r26, r28
 1cc:	17 96       	adiw	r26, 0x07	; 7
 1ce:	01 90       	ld	r0, Z+
 1d0:	0d 92       	st	X+, r0
 1d2:	8a 95       	dec	r24
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <main+0x38>
	TIMER1_InitTypes Options2 = {Normal,No_Clock,COM1A_No_PWM,COM1B_No_PWM,OC1AInt_Disable,OC1BInt_Disable,ICInt_Disable, TOVInt_Disable};
 1d6:	fe 01       	movw	r30, r28
 1d8:	3f 96       	adiw	r30, 0x0f	; 15
 1da:	88 e0       	ldi	r24, 0x08	; 8
 1dc:	df 01       	movw	r26, r30
 1de:	1d 92       	st	X+, r1
 1e0:	8a 95       	dec	r24
 1e2:	e9 f7       	brne	.-6      	; 0x1de <main+0x48>
	SPI_Init(&SPI_options); //Initialize Slave SPI
 1e4:	ce 01       	movw	r24, r28
 1e6:	01 96       	adiw	r24, 0x01	; 1
 1e8:	0e 94 2b 04 	call	0x856	; 0x856 <SPI_Init>
	LM35_Init(&ADC_Options); //Initialize LM35 Temp. Sensor
 1ec:	ce 01       	movw	r24, r28
 1ee:	05 96       	adiw	r24, 0x05	; 5
 1f0:	0e 94 6f 00 	call	0xde	; 0xde <LM35_Init>
	TIMER1_TOVInt_SetCallBack(Timer1_OV_Interrupt_Handler);
 1f4:	89 e7       	ldi	r24, 0x79	; 121
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 2f 05 	call	0xa5e	; 0xa5e <TIMER1_TOVInt_SetCallBack>
	while (1)
	{
		u8 Received_From_Master = STD_Low;
		u8 Slave_Response;
		
		Received_From_Master = SPI_TxRx(Ack);
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPI_TxRx>
		switch(Received_From_Master)
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	fc 01       	movw	r30, r24
 206:	71 97       	sbiw	r30, 0x11	; 17
 208:	e6 32       	cpi	r30, 0x26	; 38
 20a:	f1 05       	cpc	r31, r1
 20c:	b8 f7       	brcc	.-18     	; 0x1fc <main+0x66>
 20e:	e6 5d       	subi	r30, 0xD6	; 214
 210:	ff 4f       	sbci	r31, 0xFF	; 255
 212:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__tablejump2__>
		{
			case Led1:
			if(DIO_ReadChannel(DIO_ChannelA6) == STD_High)
 216:	86 e0       	ldi	r24, 0x06	; 6
 218:	0e 94 4e 02 	call	0x49c	; 0x49c <DIO_ReadChannel>
 21c:	81 30       	cpi	r24, 0x01	; 1
 21e:	11 f4       	brne	.+4      	; 0x224 <main+0x8e>
			{
				Slave_Response = On;
 220:	8f e4       	ldi	r24, 0x4F	; 79
 222:	01 c0       	rjmp	.+2      	; 0x226 <main+0x90>
			}
			else
			{
				Slave_Response = Off;
 224:	86 e4       	ldi	r24, 0x46	; 70
			}
			SPI_TxRx(Slave_Response);
 226:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPI_TxRx>
			break;
 22a:	e8 cf       	rjmp	.-48     	; 0x1fc <main+0x66>
			
			case Led2:
			if(DIO_ReadChannel(DIO_ChannelA7) == STD_High)
 22c:	87 e0       	ldi	r24, 0x07	; 7
 22e:	0e 94 4e 02 	call	0x49c	; 0x49c <DIO_ReadChannel>
 232:	81 30       	cpi	r24, 0x01	; 1
 234:	11 f4       	brne	.+4      	; 0x23a <main+0xa4>
			{
				Slave_Response = On;
 236:	8f e4       	ldi	r24, 0x4F	; 79
 238:	01 c0       	rjmp	.+2      	; 0x23c <main+0xa6>
			}
			else
			{
				Slave_Response = Off;
 23a:	86 e4       	ldi	r24, 0x46	; 70
			}
			SPI_TxRx(Slave_Response);			
 23c:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPI_TxRx>
			break;
 240:	dd cf       	rjmp	.-70     	; 0x1fc <main+0x66>
			
			case Led3:
			if(DIO_ReadChannel(DIO_ChannelC0) == STD_High)
 242:	80 e1       	ldi	r24, 0x10	; 16
 244:	0e 94 4e 02 	call	0x49c	; 0x49c <DIO_ReadChannel>
 248:	81 30       	cpi	r24, 0x01	; 1
 24a:	11 f4       	brne	.+4      	; 0x250 <main+0xba>
			{
				Slave_Response = On;
 24c:	8f e4       	ldi	r24, 0x4F	; 79
 24e:	01 c0       	rjmp	.+2      	; 0x252 <main+0xbc>
			}
			else
			{
				Slave_Response = Off;
 250:	86 e4       	ldi	r24, 0x46	; 70
			}
			SPI_TxRx(Slave_Response);			
 252:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPI_TxRx>
			break;
 256:	d2 cf       	rjmp	.-92     	; 0x1fc <main+0x66>
			
			case Led4:
			if(DIO_ReadChannel(DIO_ChannelC1) == STD_High)
 258:	81 e1       	ldi	r24, 0x11	; 17
 25a:	0e 94 4e 02 	call	0x49c	; 0x49c <DIO_ReadChannel>
 25e:	81 30       	cpi	r24, 0x01	; 1
 260:	11 f4       	brne	.+4      	; 0x266 <main+0xd0>
			{
				Slave_Response = On;
 262:	8f e4       	ldi	r24, 0x4F	; 79
 264:	01 c0       	rjmp	.+2      	; 0x268 <main+0xd2>
			}
			else
			{
				Slave_Response = Off;
 266:	86 e4       	ldi	r24, 0x46	; 70
			}
			SPI_TxRx(Slave_Response);			
 268:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPI_TxRx>
			break;
 26c:	c7 cf       	rjmp	.-114    	; 0x1fc <main+0x66>
			
			case Led5:
			if(DIO_ReadChannel(DIO_ChannelC2) == STD_High)
 26e:	82 e1       	ldi	r24, 0x12	; 18
 270:	0e 94 4e 02 	call	0x49c	; 0x49c <DIO_ReadChannel>
 274:	81 30       	cpi	r24, 0x01	; 1
 276:	11 f4       	brne	.+4      	; 0x27c <main+0xe6>
			{
				Slave_Response = On;
 278:	8f e4       	ldi	r24, 0x4F	; 79
 27a:	01 c0       	rjmp	.+2      	; 0x27e <main+0xe8>
			}
			else
			{
				Slave_Response = Off;
 27c:	86 e4       	ldi	r24, 0x46	; 70
			}
			SPI_TxRx(Slave_Response);			
 27e:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPI_TxRx>
			break;
 282:	bc cf       	rjmp	.-136    	; 0x1fc <main+0x66>
			
			case Air_Cond:
			if(Air_Cond_Flag == STD_High)
 284:	80 91 ac 00 	lds	r24, 0x00AC	; 0x8000ac <Air_Cond_Flag>
 288:	81 30       	cpi	r24, 0x01	; 1
 28a:	11 f4       	brne	.+4      	; 0x290 <main+0xfa>
			{
				Slave_Response = On;
 28c:	8f e4       	ldi	r24, 0x4F	; 79
 28e:	01 c0       	rjmp	.+2      	; 0x292 <main+0xfc>
			}
			else
			{
				Slave_Response = Off;
 290:	86 e4       	ldi	r24, 0x46	; 70
			}
			SPI_TxRx(Slave_Response);
 292:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPI_TxRx>
			break;
 296:	b2 cf       	rjmp	.-156    	; 0x1fc <main+0x66>
			
			case Led1_TurnOn:
			DIO_WriteChannel(DIO_ChannelA6,STD_High);
 298:	61 e0       	ldi	r22, 0x01	; 1
 29a:	86 e0       	ldi	r24, 0x06	; 6
 29c:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;
 2a0:	ad cf       	rjmp	.-166    	; 0x1fc <main+0x66>
			
			case Led1_TurnOff:
			DIO_WriteChannel(DIO_ChannelA6,STD_Low);
 2a2:	60 e0       	ldi	r22, 0x00	; 0
 2a4:	86 e0       	ldi	r24, 0x06	; 6
 2a6:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;
 2aa:	a8 cf       	rjmp	.-176    	; 0x1fc <main+0x66>
			
			case Led2_TurnOn:
			DIO_WriteChannel(DIO_ChannelA7,STD_High);
 2ac:	61 e0       	ldi	r22, 0x01	; 1
 2ae:	87 e0       	ldi	r24, 0x07	; 7
 2b0:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;
 2b4:	a3 cf       	rjmp	.-186    	; 0x1fc <main+0x66>
			
			case Led2_TurnOff:
			DIO_WriteChannel(DIO_ChannelA7,STD_Low);
 2b6:	60 e0       	ldi	r22, 0x00	; 0
 2b8:	87 e0       	ldi	r24, 0x07	; 7
 2ba:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;
 2be:	9e cf       	rjmp	.-196    	; 0x1fc <main+0x66>
			
			case Led3_TurnOn:
			DIO_WriteChannel(DIO_ChannelC0,STD_High);
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	80 e1       	ldi	r24, 0x10	; 16
 2c4:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;
 2c8:	99 cf       	rjmp	.-206    	; 0x1fc <main+0x66>
			
			case Led3_TurnOff:
			DIO_WriteChannel(DIO_ChannelC0,STD_Low);
 2ca:	60 e0       	ldi	r22, 0x00	; 0
 2cc:	80 e1       	ldi	r24, 0x10	; 16
 2ce:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;	
 2d2:	94 cf       	rjmp	.-216    	; 0x1fc <main+0x66>
			
			case Led4_TurnOn:
			DIO_WriteChannel(DIO_ChannelC1,STD_High);
 2d4:	61 e0       	ldi	r22, 0x01	; 1
 2d6:	81 e1       	ldi	r24, 0x11	; 17
 2d8:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;
 2dc:	8f cf       	rjmp	.-226    	; 0x1fc <main+0x66>
			
			case Led4_TurnOff:
			DIO_WriteChannel(DIO_ChannelC1,STD_Low);
 2de:	60 e0       	ldi	r22, 0x00	; 0
 2e0:	81 e1       	ldi	r24, 0x11	; 17
 2e2:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;		
 2e6:	8a cf       	rjmp	.-236    	; 0x1fc <main+0x66>
			
			case Led5_TurnOn:
			DIO_WriteChannel(DIO_ChannelC2,STD_High);
 2e8:	61 e0       	ldi	r22, 0x01	; 1
 2ea:	82 e1       	ldi	r24, 0x12	; 18
 2ec:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;
 2f0:	85 cf       	rjmp	.-246    	; 0x1fc <main+0x66>
			
			case Led5_TurnOff:
			DIO_WriteChannel(DIO_ChannelC2,STD_Low);
 2f2:	60 e0       	ldi	r22, 0x00	; 0
 2f4:	82 e1       	ldi	r24, 0x12	; 18
 2f6:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			break;
 2fa:	80 cf       	rjmp	.-256    	; 0x1fc <main+0x66>
			
			case Air_Cond_TurnOff:
			DIO_WriteChannel(DIO_ChannelD5,STD_Low);
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	8d e1       	ldi	r24, 0x1D	; 29
 300:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelD1,STD_Low);
 304:	60 e0       	ldi	r22, 0x00	; 0
 306:	89 e1       	ldi	r24, 0x19	; 25
 308:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelD0,STD_Low);
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	88 e1       	ldi	r24, 0x18	; 24
 310:	0e 94 cc 01 	call	0x398	; 0x398 <DIO_WriteChannel>
			Air_Cond_Flag = STD_Low;
 314:	10 92 ac 00 	sts	0x00AC, r1	; 0x8000ac <Air_Cond_Flag>
			TIMER1_Init(&Options2);
 318:	ce 01       	movw	r24, r28
 31a:	0f 96       	adiw	r24, 0x0f	; 15
 31c:	0e 94 82 04 	call	0x904	; 0x904 <TIMER1_Init>
			GINT_DisableAllInterrupts();
 320:	0e 94 27 04 	call	0x84e	; 0x84e <GINT_DisableAllInterrupts>
			Air_Cond_Temp_Now = STD_Low;
 324:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <Air_Cond_Temp_Now>
			break;
 328:	69 cf       	rjmp	.-302    	; 0x1fc <main+0x66>
			
			case Air_Cond_TurnOn:
			Air_Cond_Temp_Now = SPI_TxRx(Ack);
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPI_TxRx>
 330:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <Air_Cond_Temp_Now>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 334:	bf ef       	ldi	r27, 0xFF	; 255
 336:	21 ee       	ldi	r18, 0xE1	; 225
 338:	84 e0       	ldi	r24, 0x04	; 4
 33a:	b1 50       	subi	r27, 0x01	; 1
 33c:	20 40       	sbci	r18, 0x00	; 0
 33e:	80 40       	sbci	r24, 0x00	; 0
 340:	e1 f7       	brne	.-8      	; 0x33a <main+0x1a4>
 342:	00 c0       	rjmp	.+0      	; 0x344 <main+0x1ae>
 344:	00 00       	nop
			_delay_ms(100);
			TIMER1_Init(&Options);
 346:	ce 01       	movw	r24, r28
 348:	07 96       	adiw	r24, 0x07	; 7
 34a:	0e 94 82 04 	call	0x904	; 0x904 <TIMER1_Init>
			GINT_EnableAllInterrupts();
 34e:	0e 94 23 04 	call	0x846	; 0x846 <GINT_EnableAllInterrupts>
			Air_Cond_Flag = STD_High;
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <Air_Cond_Flag>
			break;
 358:	51 cf       	rjmp	.-350    	; 0x1fc <main+0x66>

0000035a <ADC_Init>:
 35a:	fc 01       	movw	r30, r24
 35c:	91 81       	ldd	r25, Z+1	; 0x01
 35e:	92 95       	swap	r25
 360:	99 0f       	add	r25, r25
 362:	99 0f       	add	r25, r25
 364:	90 7c       	andi	r25, 0xC0	; 192
 366:	97 b9       	out	0x07, r25	; 7
 368:	80 81       	ld	r24, Z
 36a:	80 68       	ori	r24, 0x80	; 128
 36c:	86 b9       	out	0x06, r24	; 6
 36e:	08 95       	ret

00000370 <ADC_Read>:
 370:	97 b1       	in	r25, 0x07	; 7
 372:	90 7e       	andi	r25, 0xE0	; 224
 374:	8f 71       	andi	r24, 0x1F	; 31
 376:	89 2b       	or	r24, r25
 378:	87 b9       	out	0x07, r24	; 7
 37a:	86 b1       	in	r24, 0x06	; 6
 37c:	80 64       	ori	r24, 0x40	; 64
 37e:	86 b9       	out	0x06, r24	; 6
 380:	34 9b       	sbis	0x06, 4	; 6
 382:	fe cf       	rjmp	.-4      	; 0x380 <ADC_Read+0x10>
 384:	86 b1       	in	r24, 0x06	; 6
 386:	80 61       	ori	r24, 0x10	; 16
 388:	86 b9       	out	0x06, r24	; 6
 38a:	24 b1       	in	r18, 0x04	; 4
 38c:	85 b1       	in	r24, 0x05	; 5
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	98 2f       	mov	r25, r24
 392:	88 27       	eor	r24, r24
 394:	82 2b       	or	r24, r18
 396:	08 95       	ret

00000398 <DIO_WriteChannel>:
 398:	98 2f       	mov	r25, r24
 39a:	96 95       	lsr	r25
 39c:	96 95       	lsr	r25
 39e:	96 95       	lsr	r25
 3a0:	87 70       	andi	r24, 0x07	; 7
 3a2:	91 30       	cpi	r25, 0x01	; 1
 3a4:	21 f1       	breq	.+72     	; 0x3ee <DIO_WriteChannel+0x56>
 3a6:	30 f0       	brcs	.+12     	; 0x3b4 <DIO_WriteChannel+0x1c>
 3a8:	92 30       	cpi	r25, 0x02	; 2
 3aa:	f1 f1       	breq	.+124    	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3ac:	93 30       	cpi	r25, 0x03	; 3
 3ae:	09 f4       	brne	.+2      	; 0x3b2 <DIO_WriteChannel+0x1a>
 3b0:	58 c0       	rjmp	.+176    	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 3b2:	08 95       	ret
 3b4:	61 30       	cpi	r22, 0x01	; 1
 3b6:	69 f4       	brne	.+26     	; 0x3d2 <DIO_WriteChannel+0x3a>
 3b8:	4b b3       	in	r20, 0x1b	; 27
 3ba:	21 e0       	ldi	r18, 0x01	; 1
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	b9 01       	movw	r22, r18
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <DIO_WriteChannel+0x2e>
 3c2:	66 0f       	add	r22, r22
 3c4:	77 1f       	adc	r23, r23
 3c6:	8a 95       	dec	r24
 3c8:	e2 f7       	brpl	.-8      	; 0x3c2 <DIO_WriteChannel+0x2a>
 3ca:	cb 01       	movw	r24, r22
 3cc:	84 2b       	or	r24, r20
 3ce:	8b bb       	out	0x1b, r24	; 27
 3d0:	08 95       	ret
 3d2:	4b b3       	in	r20, 0x1b	; 27
 3d4:	21 e0       	ldi	r18, 0x01	; 1
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	b9 01       	movw	r22, r18
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <DIO_WriteChannel+0x48>
 3dc:	66 0f       	add	r22, r22
 3de:	77 1f       	adc	r23, r23
 3e0:	8a 95       	dec	r24
 3e2:	e2 f7       	brpl	.-8      	; 0x3dc <DIO_WriteChannel+0x44>
 3e4:	cb 01       	movw	r24, r22
 3e6:	80 95       	com	r24
 3e8:	84 23       	and	r24, r20
 3ea:	8b bb       	out	0x1b, r24	; 27
 3ec:	08 95       	ret
 3ee:	61 30       	cpi	r22, 0x01	; 1
 3f0:	69 f4       	brne	.+26     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3f2:	48 b3       	in	r20, 0x18	; 24
 3f4:	21 e0       	ldi	r18, 0x01	; 1
 3f6:	30 e0       	ldi	r19, 0x00	; 0
 3f8:	b9 01       	movw	r22, r18
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fc:	66 0f       	add	r22, r22
 3fe:	77 1f       	adc	r23, r23
 400:	8a 95       	dec	r24
 402:	e2 f7       	brpl	.-8      	; 0x3fc <DIO_WriteChannel+0x64>
 404:	cb 01       	movw	r24, r22
 406:	84 2b       	or	r24, r20
 408:	88 bb       	out	0x18, r24	; 24
 40a:	08 95       	ret
 40c:	48 b3       	in	r20, 0x18	; 24
 40e:	21 e0       	ldi	r18, 0x01	; 1
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	b9 01       	movw	r22, r18
 414:	02 c0       	rjmp	.+4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 416:	66 0f       	add	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	8a 95       	dec	r24
 41c:	e2 f7       	brpl	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41e:	cb 01       	movw	r24, r22
 420:	80 95       	com	r24
 422:	84 23       	and	r24, r20
 424:	88 bb       	out	0x18, r24	; 24
 426:	08 95       	ret
 428:	61 30       	cpi	r22, 0x01	; 1
 42a:	69 f4       	brne	.+26     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 42c:	45 b3       	in	r20, 0x15	; 21
 42e:	21 e0       	ldi	r18, 0x01	; 1
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	b9 01       	movw	r22, r18
 434:	02 c0       	rjmp	.+4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 436:	66 0f       	add	r22, r22
 438:	77 1f       	adc	r23, r23
 43a:	8a 95       	dec	r24
 43c:	e2 f7       	brpl	.-8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 43e:	cb 01       	movw	r24, r22
 440:	84 2b       	or	r24, r20
 442:	85 bb       	out	0x15, r24	; 21
 444:	08 95       	ret
 446:	45 b3       	in	r20, 0x15	; 21
 448:	21 e0       	ldi	r18, 0x01	; 1
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	b9 01       	movw	r22, r18
 44e:	02 c0       	rjmp	.+4      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 450:	66 0f       	add	r22, r22
 452:	77 1f       	adc	r23, r23
 454:	8a 95       	dec	r24
 456:	e2 f7       	brpl	.-8      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 458:	cb 01       	movw	r24, r22
 45a:	80 95       	com	r24
 45c:	84 23       	and	r24, r20
 45e:	85 bb       	out	0x15, r24	; 21
 460:	08 95       	ret
 462:	61 30       	cpi	r22, 0x01	; 1
 464:	69 f4       	brne	.+26     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 466:	42 b3       	in	r20, 0x12	; 18
 468:	21 e0       	ldi	r18, 0x01	; 1
 46a:	30 e0       	ldi	r19, 0x00	; 0
 46c:	b9 01       	movw	r22, r18
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 470:	66 0f       	add	r22, r22
 472:	77 1f       	adc	r23, r23
 474:	8a 95       	dec	r24
 476:	e2 f7       	brpl	.-8      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 478:	cb 01       	movw	r24, r22
 47a:	84 2b       	or	r24, r20
 47c:	82 bb       	out	0x12, r24	; 18
 47e:	08 95       	ret
 480:	42 b3       	in	r20, 0x12	; 18
 482:	21 e0       	ldi	r18, 0x01	; 1
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	b9 01       	movw	r22, r18
 488:	02 c0       	rjmp	.+4      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 48a:	66 0f       	add	r22, r22
 48c:	77 1f       	adc	r23, r23
 48e:	8a 95       	dec	r24
 490:	e2 f7       	brpl	.-8      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 492:	cb 01       	movw	r24, r22
 494:	80 95       	com	r24
 496:	84 23       	and	r24, r20
 498:	82 bb       	out	0x12, r24	; 18
 49a:	08 95       	ret

0000049c <DIO_ReadChannel>:
 49c:	98 2f       	mov	r25, r24
 49e:	96 95       	lsr	r25
 4a0:	96 95       	lsr	r25
 4a2:	96 95       	lsr	r25
 4a4:	48 2f       	mov	r20, r24
 4a6:	47 70       	andi	r20, 0x07	; 7
 4a8:	91 30       	cpi	r25, 0x01	; 1
 4aa:	81 f0       	breq	.+32     	; 0x4cc <DIO_ReadChannel+0x30>
 4ac:	28 f0       	brcs	.+10     	; 0x4b8 <DIO_ReadChannel+0x1c>
 4ae:	92 30       	cpi	r25, 0x02	; 2
 4b0:	b9 f0       	breq	.+46     	; 0x4e0 <DIO_ReadChannel+0x44>
 4b2:	93 30       	cpi	r25, 0x03	; 3
 4b4:	f9 f0       	breq	.+62     	; 0x4f4 <DIO_ReadChannel+0x58>
 4b6:	28 c0       	rjmp	.+80     	; 0x508 <DIO_ReadChannel+0x6c>
 4b8:	99 b3       	in	r25, 0x19	; 25
 4ba:	89 2f       	mov	r24, r25
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	02 c0       	rjmp	.+4      	; 0x4c4 <DIO_ReadChannel+0x28>
 4c0:	95 95       	asr	r25
 4c2:	87 95       	ror	r24
 4c4:	4a 95       	dec	r20
 4c6:	e2 f7       	brpl	.-8      	; 0x4c0 <DIO_ReadChannel+0x24>
 4c8:	81 70       	andi	r24, 0x01	; 1
 4ca:	08 95       	ret
 4cc:	26 b3       	in	r18, 0x16	; 22
 4ce:	30 e0       	ldi	r19, 0x00	; 0
 4d0:	c9 01       	movw	r24, r18
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <DIO_ReadChannel+0x3c>
 4d4:	95 95       	asr	r25
 4d6:	87 95       	ror	r24
 4d8:	4a 95       	dec	r20
 4da:	e2 f7       	brpl	.-8      	; 0x4d4 <DIO_ReadChannel+0x38>
 4dc:	81 70       	andi	r24, 0x01	; 1
 4de:	08 95       	ret
 4e0:	23 b3       	in	r18, 0x13	; 19
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	c9 01       	movw	r24, r18
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <DIO_ReadChannel+0x50>
 4e8:	95 95       	asr	r25
 4ea:	87 95       	ror	r24
 4ec:	4a 95       	dec	r20
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <DIO_ReadChannel+0x4c>
 4f0:	81 70       	andi	r24, 0x01	; 1
 4f2:	08 95       	ret
 4f4:	20 b3       	in	r18, 0x10	; 16
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	c9 01       	movw	r24, r18
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <DIO_ReadChannel+0x64>
 4fc:	95 95       	asr	r25
 4fe:	87 95       	ror	r24
 500:	4a 95       	dec	r20
 502:	e2 f7       	brpl	.-8      	; 0x4fc <DIO_ReadChannel+0x60>
 504:	81 70       	andi	r24, 0x01	; 1
 506:	08 95       	ret
 508:	80 e0       	ldi	r24, 0x00	; 0
 50a:	08 95       	ret

0000050c <DIO_ConfigChannel>:
 50c:	98 2f       	mov	r25, r24
 50e:	96 95       	lsr	r25
 510:	96 95       	lsr	r25
 512:	96 95       	lsr	r25
 514:	87 70       	andi	r24, 0x07	; 7
 516:	91 30       	cpi	r25, 0x01	; 1
 518:	21 f1       	breq	.+72     	; 0x562 <DIO_ConfigChannel+0x56>
 51a:	30 f0       	brcs	.+12     	; 0x528 <DIO_ConfigChannel+0x1c>
 51c:	92 30       	cpi	r25, 0x02	; 2
 51e:	f1 f1       	breq	.+124    	; 0x59c <DIO_ConfigChannel+0x90>
 520:	93 30       	cpi	r25, 0x03	; 3
 522:	09 f4       	brne	.+2      	; 0x526 <DIO_ConfigChannel+0x1a>
 524:	58 c0       	rjmp	.+176    	; 0x5d6 <DIO_ConfigChannel+0xca>
 526:	08 95       	ret
 528:	61 30       	cpi	r22, 0x01	; 1
 52a:	69 f4       	brne	.+26     	; 0x546 <DIO_ConfigChannel+0x3a>
 52c:	4a b3       	in	r20, 0x1a	; 26
 52e:	21 e0       	ldi	r18, 0x01	; 1
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	b9 01       	movw	r22, r18
 534:	02 c0       	rjmp	.+4      	; 0x53a <DIO_ConfigChannel+0x2e>
 536:	66 0f       	add	r22, r22
 538:	77 1f       	adc	r23, r23
 53a:	8a 95       	dec	r24
 53c:	e2 f7       	brpl	.-8      	; 0x536 <DIO_ConfigChannel+0x2a>
 53e:	cb 01       	movw	r24, r22
 540:	84 2b       	or	r24, r20
 542:	8a bb       	out	0x1a, r24	; 26
 544:	08 95       	ret
 546:	4a b3       	in	r20, 0x1a	; 26
 548:	21 e0       	ldi	r18, 0x01	; 1
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	b9 01       	movw	r22, r18
 54e:	02 c0       	rjmp	.+4      	; 0x554 <DIO_ConfigChannel+0x48>
 550:	66 0f       	add	r22, r22
 552:	77 1f       	adc	r23, r23
 554:	8a 95       	dec	r24
 556:	e2 f7       	brpl	.-8      	; 0x550 <DIO_ConfigChannel+0x44>
 558:	cb 01       	movw	r24, r22
 55a:	80 95       	com	r24
 55c:	84 23       	and	r24, r20
 55e:	8a bb       	out	0x1a, r24	; 26
 560:	08 95       	ret
 562:	61 30       	cpi	r22, 0x01	; 1
 564:	69 f4       	brne	.+26     	; 0x580 <DIO_ConfigChannel+0x74>
 566:	47 b3       	in	r20, 0x17	; 23
 568:	21 e0       	ldi	r18, 0x01	; 1
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	b9 01       	movw	r22, r18
 56e:	02 c0       	rjmp	.+4      	; 0x574 <DIO_ConfigChannel+0x68>
 570:	66 0f       	add	r22, r22
 572:	77 1f       	adc	r23, r23
 574:	8a 95       	dec	r24
 576:	e2 f7       	brpl	.-8      	; 0x570 <DIO_ConfigChannel+0x64>
 578:	cb 01       	movw	r24, r22
 57a:	84 2b       	or	r24, r20
 57c:	87 bb       	out	0x17, r24	; 23
 57e:	08 95       	ret
 580:	47 b3       	in	r20, 0x17	; 23
 582:	21 e0       	ldi	r18, 0x01	; 1
 584:	30 e0       	ldi	r19, 0x00	; 0
 586:	b9 01       	movw	r22, r18
 588:	02 c0       	rjmp	.+4      	; 0x58e <DIO_ConfigChannel+0x82>
 58a:	66 0f       	add	r22, r22
 58c:	77 1f       	adc	r23, r23
 58e:	8a 95       	dec	r24
 590:	e2 f7       	brpl	.-8      	; 0x58a <DIO_ConfigChannel+0x7e>
 592:	cb 01       	movw	r24, r22
 594:	80 95       	com	r24
 596:	84 23       	and	r24, r20
 598:	87 bb       	out	0x17, r24	; 23
 59a:	08 95       	ret
 59c:	61 30       	cpi	r22, 0x01	; 1
 59e:	69 f4       	brne	.+26     	; 0x5ba <DIO_ConfigChannel+0xae>
 5a0:	44 b3       	in	r20, 0x14	; 20
 5a2:	21 e0       	ldi	r18, 0x01	; 1
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	b9 01       	movw	r22, r18
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <DIO_ConfigChannel+0xa2>
 5aa:	66 0f       	add	r22, r22
 5ac:	77 1f       	adc	r23, r23
 5ae:	8a 95       	dec	r24
 5b0:	e2 f7       	brpl	.-8      	; 0x5aa <DIO_ConfigChannel+0x9e>
 5b2:	cb 01       	movw	r24, r22
 5b4:	84 2b       	or	r24, r20
 5b6:	84 bb       	out	0x14, r24	; 20
 5b8:	08 95       	ret
 5ba:	44 b3       	in	r20, 0x14	; 20
 5bc:	21 e0       	ldi	r18, 0x01	; 1
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	b9 01       	movw	r22, r18
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <DIO_ConfigChannel+0xbc>
 5c4:	66 0f       	add	r22, r22
 5c6:	77 1f       	adc	r23, r23
 5c8:	8a 95       	dec	r24
 5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <DIO_ConfigChannel+0xb8>
 5cc:	cb 01       	movw	r24, r22
 5ce:	80 95       	com	r24
 5d0:	84 23       	and	r24, r20
 5d2:	84 bb       	out	0x14, r24	; 20
 5d4:	08 95       	ret
 5d6:	61 30       	cpi	r22, 0x01	; 1
 5d8:	69 f4       	brne	.+26     	; 0x5f4 <DIO_ConfigChannel+0xe8>
 5da:	41 b3       	in	r20, 0x11	; 17
 5dc:	21 e0       	ldi	r18, 0x01	; 1
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	b9 01       	movw	r22, r18
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <DIO_ConfigChannel+0xdc>
 5e4:	66 0f       	add	r22, r22
 5e6:	77 1f       	adc	r23, r23
 5e8:	8a 95       	dec	r24
 5ea:	e2 f7       	brpl	.-8      	; 0x5e4 <DIO_ConfigChannel+0xd8>
 5ec:	cb 01       	movw	r24, r22
 5ee:	84 2b       	or	r24, r20
 5f0:	81 bb       	out	0x11, r24	; 17
 5f2:	08 95       	ret
 5f4:	41 b3       	in	r20, 0x11	; 17
 5f6:	21 e0       	ldi	r18, 0x01	; 1
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	b9 01       	movw	r22, r18
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <DIO_ConfigChannel+0xf6>
 5fe:	66 0f       	add	r22, r22
 600:	77 1f       	adc	r23, r23
 602:	8a 95       	dec	r24
 604:	e2 f7       	brpl	.-8      	; 0x5fe <DIO_ConfigChannel+0xf2>
 606:	cb 01       	movw	r24, r22
 608:	80 95       	com	r24
 60a:	84 23       	and	r24, r20
 60c:	81 bb       	out	0x11, r24	; 17
 60e:	08 95       	ret

00000610 <DIO_Init>:
 610:	80 e0       	ldi	r24, 0x00	; 0
 612:	a0 c0       	rjmp	.+320    	; 0x754 <DIO_Init+0x144>
 614:	98 2f       	mov	r25, r24
 616:	96 95       	lsr	r25
 618:	96 95       	lsr	r25
 61a:	96 95       	lsr	r25
 61c:	28 2f       	mov	r18, r24
 61e:	27 70       	andi	r18, 0x07	; 7
 620:	91 30       	cpi	r25, 0x01	; 1
 622:	61 f1       	breq	.+88     	; 0x67c <DIO_Init+0x6c>
 624:	38 f0       	brcs	.+14     	; 0x634 <DIO_Init+0x24>
 626:	92 30       	cpi	r25, 0x02	; 2
 628:	09 f4       	brne	.+2      	; 0x62c <DIO_Init+0x1c>
 62a:	4c c0       	rjmp	.+152    	; 0x6c4 <DIO_Init+0xb4>
 62c:	93 30       	cpi	r25, 0x03	; 3
 62e:	09 f4       	brne	.+2      	; 0x632 <DIO_Init+0x22>
 630:	6d c0       	rjmp	.+218    	; 0x70c <DIO_Init+0xfc>
 632:	8f c0       	rjmp	.+286    	; 0x752 <DIO_Init+0x142>
 634:	e8 2f       	mov	r30, r24
 636:	f0 e0       	ldi	r31, 0x00	; 0
 638:	ee 0f       	add	r30, r30
 63a:	ff 1f       	adc	r31, r31
 63c:	e0 5a       	subi	r30, 0xA0	; 160
 63e:	ff 4f       	sbci	r31, 0xFF	; 255
 640:	90 81       	ld	r25, Z
 642:	91 30       	cpi	r25, 0x01	; 1
 644:	69 f4       	brne	.+26     	; 0x660 <DIO_Init+0x50>
 646:	9a b3       	in	r25, 0x1a	; 26
 648:	41 e0       	ldi	r20, 0x01	; 1
 64a:	50 e0       	ldi	r21, 0x00	; 0
 64c:	ba 01       	movw	r22, r20
 64e:	02 c0       	rjmp	.+4      	; 0x654 <DIO_Init+0x44>
 650:	66 0f       	add	r22, r22
 652:	77 1f       	adc	r23, r23
 654:	2a 95       	dec	r18
 656:	e2 f7       	brpl	.-8      	; 0x650 <DIO_Init+0x40>
 658:	9b 01       	movw	r18, r22
 65a:	29 2b       	or	r18, r25
 65c:	2a bb       	out	0x1a, r18	; 26
 65e:	79 c0       	rjmp	.+242    	; 0x752 <DIO_Init+0x142>
 660:	9a b3       	in	r25, 0x1a	; 26
 662:	41 e0       	ldi	r20, 0x01	; 1
 664:	50 e0       	ldi	r21, 0x00	; 0
 666:	ba 01       	movw	r22, r20
 668:	02 c0       	rjmp	.+4      	; 0x66e <DIO_Init+0x5e>
 66a:	66 0f       	add	r22, r22
 66c:	77 1f       	adc	r23, r23
 66e:	2a 95       	dec	r18
 670:	e2 f7       	brpl	.-8      	; 0x66a <DIO_Init+0x5a>
 672:	9b 01       	movw	r18, r22
 674:	20 95       	com	r18
 676:	29 23       	and	r18, r25
 678:	2a bb       	out	0x1a, r18	; 26
 67a:	6b c0       	rjmp	.+214    	; 0x752 <DIO_Init+0x142>
 67c:	e8 2f       	mov	r30, r24
 67e:	f0 e0       	ldi	r31, 0x00	; 0
 680:	ee 0f       	add	r30, r30
 682:	ff 1f       	adc	r31, r31
 684:	e0 5a       	subi	r30, 0xA0	; 160
 686:	ff 4f       	sbci	r31, 0xFF	; 255
 688:	90 81       	ld	r25, Z
 68a:	91 30       	cpi	r25, 0x01	; 1
 68c:	69 f4       	brne	.+26     	; 0x6a8 <DIO_Init+0x98>
 68e:	97 b3       	in	r25, 0x17	; 23
 690:	41 e0       	ldi	r20, 0x01	; 1
 692:	50 e0       	ldi	r21, 0x00	; 0
 694:	ba 01       	movw	r22, r20
 696:	02 c0       	rjmp	.+4      	; 0x69c <DIO_Init+0x8c>
 698:	66 0f       	add	r22, r22
 69a:	77 1f       	adc	r23, r23
 69c:	2a 95       	dec	r18
 69e:	e2 f7       	brpl	.-8      	; 0x698 <DIO_Init+0x88>
 6a0:	9b 01       	movw	r18, r22
 6a2:	29 2b       	or	r18, r25
 6a4:	27 bb       	out	0x17, r18	; 23
 6a6:	55 c0       	rjmp	.+170    	; 0x752 <DIO_Init+0x142>
 6a8:	97 b3       	in	r25, 0x17	; 23
 6aa:	41 e0       	ldi	r20, 0x01	; 1
 6ac:	50 e0       	ldi	r21, 0x00	; 0
 6ae:	ba 01       	movw	r22, r20
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <DIO_Init+0xa6>
 6b2:	66 0f       	add	r22, r22
 6b4:	77 1f       	adc	r23, r23
 6b6:	2a 95       	dec	r18
 6b8:	e2 f7       	brpl	.-8      	; 0x6b2 <DIO_Init+0xa2>
 6ba:	9b 01       	movw	r18, r22
 6bc:	20 95       	com	r18
 6be:	29 23       	and	r18, r25
 6c0:	27 bb       	out	0x17, r18	; 23
 6c2:	47 c0       	rjmp	.+142    	; 0x752 <DIO_Init+0x142>
 6c4:	e8 2f       	mov	r30, r24
 6c6:	f0 e0       	ldi	r31, 0x00	; 0
 6c8:	ee 0f       	add	r30, r30
 6ca:	ff 1f       	adc	r31, r31
 6cc:	e0 5a       	subi	r30, 0xA0	; 160
 6ce:	ff 4f       	sbci	r31, 0xFF	; 255
 6d0:	90 81       	ld	r25, Z
 6d2:	91 30       	cpi	r25, 0x01	; 1
 6d4:	69 f4       	brne	.+26     	; 0x6f0 <DIO_Init+0xe0>
 6d6:	94 b3       	in	r25, 0x14	; 20
 6d8:	41 e0       	ldi	r20, 0x01	; 1
 6da:	50 e0       	ldi	r21, 0x00	; 0
 6dc:	ba 01       	movw	r22, r20
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <DIO_Init+0xd4>
 6e0:	66 0f       	add	r22, r22
 6e2:	77 1f       	adc	r23, r23
 6e4:	2a 95       	dec	r18
 6e6:	e2 f7       	brpl	.-8      	; 0x6e0 <DIO_Init+0xd0>
 6e8:	9b 01       	movw	r18, r22
 6ea:	29 2b       	or	r18, r25
 6ec:	24 bb       	out	0x14, r18	; 20
 6ee:	31 c0       	rjmp	.+98     	; 0x752 <DIO_Init+0x142>
 6f0:	94 b3       	in	r25, 0x14	; 20
 6f2:	41 e0       	ldi	r20, 0x01	; 1
 6f4:	50 e0       	ldi	r21, 0x00	; 0
 6f6:	ba 01       	movw	r22, r20
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <DIO_Init+0xee>
 6fa:	66 0f       	add	r22, r22
 6fc:	77 1f       	adc	r23, r23
 6fe:	2a 95       	dec	r18
 700:	e2 f7       	brpl	.-8      	; 0x6fa <DIO_Init+0xea>
 702:	9b 01       	movw	r18, r22
 704:	20 95       	com	r18
 706:	29 23       	and	r18, r25
 708:	24 bb       	out	0x14, r18	; 20
 70a:	23 c0       	rjmp	.+70     	; 0x752 <DIO_Init+0x142>
 70c:	e8 2f       	mov	r30, r24
 70e:	f0 e0       	ldi	r31, 0x00	; 0
 710:	ee 0f       	add	r30, r30
 712:	ff 1f       	adc	r31, r31
 714:	e0 5a       	subi	r30, 0xA0	; 160
 716:	ff 4f       	sbci	r31, 0xFF	; 255
 718:	90 81       	ld	r25, Z
 71a:	91 30       	cpi	r25, 0x01	; 1
 71c:	69 f4       	brne	.+26     	; 0x738 <DIO_Init+0x128>
 71e:	91 b3       	in	r25, 0x11	; 17
 720:	41 e0       	ldi	r20, 0x01	; 1
 722:	50 e0       	ldi	r21, 0x00	; 0
 724:	ba 01       	movw	r22, r20
 726:	02 c0       	rjmp	.+4      	; 0x72c <DIO_Init+0x11c>
 728:	66 0f       	add	r22, r22
 72a:	77 1f       	adc	r23, r23
 72c:	2a 95       	dec	r18
 72e:	e2 f7       	brpl	.-8      	; 0x728 <DIO_Init+0x118>
 730:	9b 01       	movw	r18, r22
 732:	29 2b       	or	r18, r25
 734:	21 bb       	out	0x11, r18	; 17
 736:	0d c0       	rjmp	.+26     	; 0x752 <DIO_Init+0x142>
 738:	91 b3       	in	r25, 0x11	; 17
 73a:	41 e0       	ldi	r20, 0x01	; 1
 73c:	50 e0       	ldi	r21, 0x00	; 0
 73e:	ba 01       	movw	r22, r20
 740:	02 c0       	rjmp	.+4      	; 0x746 <DIO_Init+0x136>
 742:	66 0f       	add	r22, r22
 744:	77 1f       	adc	r23, r23
 746:	2a 95       	dec	r18
 748:	e2 f7       	brpl	.-8      	; 0x742 <DIO_Init+0x132>
 74a:	9b 01       	movw	r18, r22
 74c:	20 95       	com	r18
 74e:	29 23       	and	r18, r25
 750:	21 bb       	out	0x11, r18	; 17
 752:	8f 5f       	subi	r24, 0xFF	; 255
 754:	80 32       	cpi	r24, 0x20	; 32
 756:	08 f4       	brcc	.+2      	; 0x75a <DIO_Init+0x14a>
 758:	5d cf       	rjmp	.-326    	; 0x614 <DIO_Init+0x4>
 75a:	08 95       	ret

0000075c <__vector_1>:
 75c:	1f 92       	push	r1
 75e:	0f 92       	push	r0
 760:	0f b6       	in	r0, 0x3f	; 63
 762:	0f 92       	push	r0
 764:	11 24       	eor	r1, r1
 766:	2f 93       	push	r18
 768:	3f 93       	push	r19
 76a:	4f 93       	push	r20
 76c:	5f 93       	push	r21
 76e:	6f 93       	push	r22
 770:	7f 93       	push	r23
 772:	8f 93       	push	r24
 774:	9f 93       	push	r25
 776:	af 93       	push	r26
 778:	bf 93       	push	r27
 77a:	ef 93       	push	r30
 77c:	ff 93       	push	r31
 77e:	e0 91 b3 00 	lds	r30, 0x00B3	; 0x8000b3 <ExtInt0FunPtr>
 782:	f0 91 b4 00 	lds	r31, 0x00B4	; 0x8000b4 <ExtInt0FunPtr+0x1>
 786:	09 95       	icall
 788:	ff 91       	pop	r31
 78a:	ef 91       	pop	r30
 78c:	bf 91       	pop	r27
 78e:	af 91       	pop	r26
 790:	9f 91       	pop	r25
 792:	8f 91       	pop	r24
 794:	7f 91       	pop	r23
 796:	6f 91       	pop	r22
 798:	5f 91       	pop	r21
 79a:	4f 91       	pop	r20
 79c:	3f 91       	pop	r19
 79e:	2f 91       	pop	r18
 7a0:	0f 90       	pop	r0
 7a2:	0f be       	out	0x3f, r0	; 63
 7a4:	0f 90       	pop	r0
 7a6:	1f 90       	pop	r1
 7a8:	18 95       	reti

000007aa <__vector_2>:
 7aa:	1f 92       	push	r1
 7ac:	0f 92       	push	r0
 7ae:	0f b6       	in	r0, 0x3f	; 63
 7b0:	0f 92       	push	r0
 7b2:	11 24       	eor	r1, r1
 7b4:	2f 93       	push	r18
 7b6:	3f 93       	push	r19
 7b8:	4f 93       	push	r20
 7ba:	5f 93       	push	r21
 7bc:	6f 93       	push	r22
 7be:	7f 93       	push	r23
 7c0:	8f 93       	push	r24
 7c2:	9f 93       	push	r25
 7c4:	af 93       	push	r26
 7c6:	bf 93       	push	r27
 7c8:	ef 93       	push	r30
 7ca:	ff 93       	push	r31
 7cc:	e0 91 b1 00 	lds	r30, 0x00B1	; 0x8000b1 <ExtInt1FunPtr>
 7d0:	f0 91 b2 00 	lds	r31, 0x00B2	; 0x8000b2 <ExtInt1FunPtr+0x1>
 7d4:	09 95       	icall
 7d6:	ff 91       	pop	r31
 7d8:	ef 91       	pop	r30
 7da:	bf 91       	pop	r27
 7dc:	af 91       	pop	r26
 7de:	9f 91       	pop	r25
 7e0:	8f 91       	pop	r24
 7e2:	7f 91       	pop	r23
 7e4:	6f 91       	pop	r22
 7e6:	5f 91       	pop	r21
 7e8:	4f 91       	pop	r20
 7ea:	3f 91       	pop	r19
 7ec:	2f 91       	pop	r18
 7ee:	0f 90       	pop	r0
 7f0:	0f be       	out	0x3f, r0	; 63
 7f2:	0f 90       	pop	r0
 7f4:	1f 90       	pop	r1
 7f6:	18 95       	reti

000007f8 <__vector_3>:
 7f8:	1f 92       	push	r1
 7fa:	0f 92       	push	r0
 7fc:	0f b6       	in	r0, 0x3f	; 63
 7fe:	0f 92       	push	r0
 800:	11 24       	eor	r1, r1
 802:	2f 93       	push	r18
 804:	3f 93       	push	r19
 806:	4f 93       	push	r20
 808:	5f 93       	push	r21
 80a:	6f 93       	push	r22
 80c:	7f 93       	push	r23
 80e:	8f 93       	push	r24
 810:	9f 93       	push	r25
 812:	af 93       	push	r26
 814:	bf 93       	push	r27
 816:	ef 93       	push	r30
 818:	ff 93       	push	r31
 81a:	e0 91 af 00 	lds	r30, 0x00AF	; 0x8000af <ExtInt2FunPtr>
 81e:	f0 91 b0 00 	lds	r31, 0x00B0	; 0x8000b0 <ExtInt2FunPtr+0x1>
 822:	09 95       	icall
 824:	ff 91       	pop	r31
 826:	ef 91       	pop	r30
 828:	bf 91       	pop	r27
 82a:	af 91       	pop	r26
 82c:	9f 91       	pop	r25
 82e:	8f 91       	pop	r24
 830:	7f 91       	pop	r23
 832:	6f 91       	pop	r22
 834:	5f 91       	pop	r21
 836:	4f 91       	pop	r20
 838:	3f 91       	pop	r19
 83a:	2f 91       	pop	r18
 83c:	0f 90       	pop	r0
 83e:	0f be       	out	0x3f, r0	; 63
 840:	0f 90       	pop	r0
 842:	1f 90       	pop	r1
 844:	18 95       	reti

00000846 <GINT_EnableAllInterrupts>:
 846:	8f b7       	in	r24, 0x3f	; 63
 848:	80 68       	ori	r24, 0x80	; 128
 84a:	8f bf       	out	0x3f, r24	; 63
 84c:	08 95       	ret

0000084e <GINT_DisableAllInterrupts>:
 84e:	8f b7       	in	r24, 0x3f	; 63
 850:	8f 77       	andi	r24, 0x7F	; 127
 852:	8f bf       	out	0x3f, r24	; 63
 854:	08 95       	ret

00000856 <SPI_Init>:
 856:	cf 93       	push	r28
 858:	df 93       	push	r29
 85a:	ec 01       	movw	r28, r24
 85c:	88 81       	ld	r24, Y
 85e:	88 23       	and	r24, r24
 860:	c9 f0       	breq	.+50     	; 0x894 <__stack+0x35>
 862:	81 30       	cpi	r24, 0x01	; 1
 864:	69 f5       	brne	.+90     	; 0x8c0 <__stack+0x61>
 866:	61 e0       	ldi	r22, 0x01	; 1
 868:	8c e0       	ldi	r24, 0x0C	; 12
 86a:	0e 94 86 02 	call	0x50c	; 0x50c <DIO_ConfigChannel>
 86e:	61 e0       	ldi	r22, 0x01	; 1
 870:	8d e0       	ldi	r24, 0x0D	; 13
 872:	0e 94 86 02 	call	0x50c	; 0x50c <DIO_ConfigChannel>
 876:	60 e0       	ldi	r22, 0x00	; 0
 878:	8e e0       	ldi	r24, 0x0E	; 14
 87a:	0e 94 86 02 	call	0x50c	; 0x50c <DIO_ConfigChannel>
 87e:	61 e0       	ldi	r22, 0x01	; 1
 880:	8f e0       	ldi	r24, 0x0F	; 15
 882:	0e 94 86 02 	call	0x50c	; 0x50c <DIO_ConfigChannel>
 886:	8d b1       	in	r24, 0x0d	; 13
 888:	80 61       	ori	r24, 0x10	; 16
 88a:	8d b9       	out	0x0d, r24	; 13
 88c:	8d b1       	in	r24, 0x0d	; 13
 88e:	80 64       	ori	r24, 0x40	; 64
 890:	8d b9       	out	0x0d, r24	; 13
 892:	16 c0       	rjmp	.+44     	; 0x8c0 <__stack+0x61>
 894:	60 e0       	ldi	r22, 0x00	; 0
 896:	8c e0       	ldi	r24, 0x0C	; 12
 898:	0e 94 86 02 	call	0x50c	; 0x50c <DIO_ConfigChannel>
 89c:	60 e0       	ldi	r22, 0x00	; 0
 89e:	8d e0       	ldi	r24, 0x0D	; 13
 8a0:	0e 94 86 02 	call	0x50c	; 0x50c <DIO_ConfigChannel>
 8a4:	61 e0       	ldi	r22, 0x01	; 1
 8a6:	8e e0       	ldi	r24, 0x0E	; 14
 8a8:	0e 94 86 02 	call	0x50c	; 0x50c <DIO_ConfigChannel>
 8ac:	60 e0       	ldi	r22, 0x00	; 0
 8ae:	8f e0       	ldi	r24, 0x0F	; 15
 8b0:	0e 94 86 02 	call	0x50c	; 0x50c <DIO_ConfigChannel>
 8b4:	8d b1       	in	r24, 0x0d	; 13
 8b6:	8f 7e       	andi	r24, 0xEF	; 239
 8b8:	8d b9       	out	0x0d, r24	; 13
 8ba:	8d b1       	in	r24, 0x0d	; 13
 8bc:	80 64       	ori	r24, 0x40	; 64
 8be:	8d b9       	out	0x0d, r24	; 13
 8c0:	2d b1       	in	r18, 0x0d	; 13
 8c2:	99 81       	ldd	r25, Y+1	; 0x01
 8c4:	30 e2       	ldi	r19, 0x20	; 32
 8c6:	93 9f       	mul	r25, r19
 8c8:	c0 01       	movw	r24, r0
 8ca:	11 24       	eor	r1, r1
 8cc:	82 2b       	or	r24, r18
 8ce:	8d b9       	out	0x0d, r24	; 13
 8d0:	8b 81       	ldd	r24, Y+3	; 0x03
 8d2:	81 30       	cpi	r24, 0x01	; 1
 8d4:	41 f4       	brne	.+16     	; 0x8e6 <__stack+0x87>
 8d6:	8e b1       	in	r24, 0x0e	; 14
 8d8:	81 60       	ori	r24, 0x01	; 1
 8da:	8e b9       	out	0x0e, r24	; 14
 8dc:	9d b1       	in	r25, 0x0d	; 13
 8de:	8a 81       	ldd	r24, Y+2	; 0x02
 8e0:	89 2b       	or	r24, r25
 8e2:	8d b9       	out	0x0d, r24	; 13
 8e4:	07 c0       	rjmp	.+14     	; 0x8f4 <__stack+0x95>
 8e6:	8e b1       	in	r24, 0x0e	; 14
 8e8:	8e 7f       	andi	r24, 0xFE	; 254
 8ea:	8e b9       	out	0x0e, r24	; 14
 8ec:	9d b1       	in	r25, 0x0d	; 13
 8ee:	8a 81       	ldd	r24, Y+2	; 0x02
 8f0:	89 2b       	or	r24, r25
 8f2:	8d b9       	out	0x0d, r24	; 13
 8f4:	df 91       	pop	r29
 8f6:	cf 91       	pop	r28
 8f8:	08 95       	ret

000008fa <SPI_TxRx>:
 8fa:	8f b9       	out	0x0f, r24	; 15
 8fc:	77 9b       	sbis	0x0e, 7	; 14
 8fe:	fe cf       	rjmp	.-4      	; 0x8fc <SPI_TxRx+0x2>
 900:	8f b1       	in	r24, 0x0f	; 15
 902:	08 95       	ret

00000904 <TIMER1_Init>:
 904:	fc 01       	movw	r30, r24
 906:	80 81       	ld	r24, Z
 908:	81 30       	cpi	r24, 0x01	; 1
 90a:	99 f0       	breq	.+38     	; 0x932 <TIMER1_Init+0x2e>
 90c:	28 f0       	brcs	.+10     	; 0x918 <TIMER1_Init+0x14>
 90e:	82 30       	cpi	r24, 0x02	; 2
 910:	e9 f0       	breq	.+58     	; 0x94c <TIMER1_Init+0x48>
 912:	83 30       	cpi	r24, 0x03	; 3
 914:	41 f1       	breq	.+80     	; 0x966 <TIMER1_Init+0x62>
 916:	33 c0       	rjmp	.+102    	; 0x97e <TIMER1_Init+0x7a>
 918:	8f b5       	in	r24, 0x2f	; 47
 91a:	8e 7f       	andi	r24, 0xFE	; 254
 91c:	8f bd       	out	0x2f, r24	; 47
 91e:	8f b5       	in	r24, 0x2f	; 47
 920:	8d 7f       	andi	r24, 0xFD	; 253
 922:	8f bd       	out	0x2f, r24	; 47
 924:	8e b5       	in	r24, 0x2e	; 46
 926:	87 7f       	andi	r24, 0xF7	; 247
 928:	8e bd       	out	0x2e, r24	; 46
 92a:	8e b5       	in	r24, 0x2e	; 46
 92c:	8f 7e       	andi	r24, 0xEF	; 239
 92e:	8e bd       	out	0x2e, r24	; 46
 930:	26 c0       	rjmp	.+76     	; 0x97e <TIMER1_Init+0x7a>
 932:	8f b5       	in	r24, 0x2f	; 47
 934:	8e 7f       	andi	r24, 0xFE	; 254
 936:	8f bd       	out	0x2f, r24	; 47
 938:	8f b5       	in	r24, 0x2f	; 47
 93a:	8d 7f       	andi	r24, 0xFD	; 253
 93c:	8f bd       	out	0x2f, r24	; 47
 93e:	8e b5       	in	r24, 0x2e	; 46
 940:	88 60       	ori	r24, 0x08	; 8
 942:	8e bd       	out	0x2e, r24	; 46
 944:	8e b5       	in	r24, 0x2e	; 46
 946:	8f 7e       	andi	r24, 0xEF	; 239
 948:	8e bd       	out	0x2e, r24	; 46
 94a:	19 c0       	rjmp	.+50     	; 0x97e <TIMER1_Init+0x7a>
 94c:	8f b5       	in	r24, 0x2f	; 47
 94e:	8e 7f       	andi	r24, 0xFE	; 254
 950:	8f bd       	out	0x2f, r24	; 47
 952:	8f b5       	in	r24, 0x2f	; 47
 954:	82 60       	ori	r24, 0x02	; 2
 956:	8f bd       	out	0x2f, r24	; 47
 958:	8e b5       	in	r24, 0x2e	; 46
 95a:	88 60       	ori	r24, 0x08	; 8
 95c:	8e bd       	out	0x2e, r24	; 46
 95e:	8e b5       	in	r24, 0x2e	; 46
 960:	80 61       	ori	r24, 0x10	; 16
 962:	8e bd       	out	0x2e, r24	; 46
 964:	0c c0       	rjmp	.+24     	; 0x97e <TIMER1_Init+0x7a>
 966:	8f b5       	in	r24, 0x2f	; 47
 968:	8e 7f       	andi	r24, 0xFE	; 254
 96a:	8f bd       	out	0x2f, r24	; 47
 96c:	8f b5       	in	r24, 0x2f	; 47
 96e:	82 60       	ori	r24, 0x02	; 2
 970:	8f bd       	out	0x2f, r24	; 47
 972:	8e b5       	in	r24, 0x2e	; 46
 974:	87 7f       	andi	r24, 0xF7	; 247
 976:	8e bd       	out	0x2e, r24	; 46
 978:	8e b5       	in	r24, 0x2e	; 46
 97a:	80 61       	ori	r24, 0x10	; 16
 97c:	8e bd       	out	0x2e, r24	; 46
 97e:	81 81       	ldd	r24, Z+1	; 0x01
 980:	82 30       	cpi	r24, 0x02	; 2
 982:	01 f1       	breq	.+64     	; 0x9c4 <TIMER1_Init+0xc0>
 984:	28 f4       	brcc	.+10     	; 0x990 <TIMER1_Init+0x8c>
 986:	88 23       	and	r24, r24
 988:	49 f0       	breq	.+18     	; 0x99c <TIMER1_Init+0x98>
 98a:	81 30       	cpi	r24, 0x01	; 1
 98c:	89 f0       	breq	.+34     	; 0x9b0 <TIMER1_Init+0xac>
 98e:	41 c0       	rjmp	.+130    	; 0xa12 <TIMER1_Init+0x10e>
 990:	84 30       	cpi	r24, 0x04	; 4
 992:	61 f1       	breq	.+88     	; 0x9ec <TIMER1_Init+0xe8>
 994:	08 f1       	brcs	.+66     	; 0x9d8 <TIMER1_Init+0xd4>
 996:	85 30       	cpi	r24, 0x05	; 5
 998:	99 f1       	breq	.+102    	; 0xa00 <TIMER1_Init+0xfc>
 99a:	3b c0       	rjmp	.+118    	; 0xa12 <TIMER1_Init+0x10e>
 99c:	8e b5       	in	r24, 0x2e	; 46
 99e:	8e 7f       	andi	r24, 0xFE	; 254
 9a0:	8e bd       	out	0x2e, r24	; 46
 9a2:	8e b5       	in	r24, 0x2e	; 46
 9a4:	8d 7f       	andi	r24, 0xFD	; 253
 9a6:	8e bd       	out	0x2e, r24	; 46
 9a8:	8e b5       	in	r24, 0x2e	; 46
 9aa:	8b 7f       	andi	r24, 0xFB	; 251
 9ac:	8e bd       	out	0x2e, r24	; 46
 9ae:	31 c0       	rjmp	.+98     	; 0xa12 <TIMER1_Init+0x10e>
 9b0:	8e b5       	in	r24, 0x2e	; 46
 9b2:	81 60       	ori	r24, 0x01	; 1
 9b4:	8e bd       	out	0x2e, r24	; 46
 9b6:	8e b5       	in	r24, 0x2e	; 46
 9b8:	8d 7f       	andi	r24, 0xFD	; 253
 9ba:	8e bd       	out	0x2e, r24	; 46
 9bc:	8e b5       	in	r24, 0x2e	; 46
 9be:	8b 7f       	andi	r24, 0xFB	; 251
 9c0:	8e bd       	out	0x2e, r24	; 46
 9c2:	27 c0       	rjmp	.+78     	; 0xa12 <TIMER1_Init+0x10e>
 9c4:	8e b5       	in	r24, 0x2e	; 46
 9c6:	8e 7f       	andi	r24, 0xFE	; 254
 9c8:	8e bd       	out	0x2e, r24	; 46
 9ca:	8e b5       	in	r24, 0x2e	; 46
 9cc:	82 60       	ori	r24, 0x02	; 2
 9ce:	8e bd       	out	0x2e, r24	; 46
 9d0:	8e b5       	in	r24, 0x2e	; 46
 9d2:	8b 7f       	andi	r24, 0xFB	; 251
 9d4:	8e bd       	out	0x2e, r24	; 46
 9d6:	1d c0       	rjmp	.+58     	; 0xa12 <TIMER1_Init+0x10e>
 9d8:	8e b5       	in	r24, 0x2e	; 46
 9da:	81 60       	ori	r24, 0x01	; 1
 9dc:	8e bd       	out	0x2e, r24	; 46
 9de:	8e b5       	in	r24, 0x2e	; 46
 9e0:	82 60       	ori	r24, 0x02	; 2
 9e2:	8e bd       	out	0x2e, r24	; 46
 9e4:	8e b5       	in	r24, 0x2e	; 46
 9e6:	8b 7f       	andi	r24, 0xFB	; 251
 9e8:	8e bd       	out	0x2e, r24	; 46
 9ea:	13 c0       	rjmp	.+38     	; 0xa12 <TIMER1_Init+0x10e>
 9ec:	8e b5       	in	r24, 0x2e	; 46
 9ee:	8e 7f       	andi	r24, 0xFE	; 254
 9f0:	8e bd       	out	0x2e, r24	; 46
 9f2:	8e b5       	in	r24, 0x2e	; 46
 9f4:	8d 7f       	andi	r24, 0xFD	; 253
 9f6:	8e bd       	out	0x2e, r24	; 46
 9f8:	8e b5       	in	r24, 0x2e	; 46
 9fa:	84 60       	ori	r24, 0x04	; 4
 9fc:	8e bd       	out	0x2e, r24	; 46
 9fe:	09 c0       	rjmp	.+18     	; 0xa12 <TIMER1_Init+0x10e>
 a00:	8e b5       	in	r24, 0x2e	; 46
 a02:	81 60       	ori	r24, 0x01	; 1
 a04:	8e bd       	out	0x2e, r24	; 46
 a06:	8e b5       	in	r24, 0x2e	; 46
 a08:	8d 7f       	andi	r24, 0xFD	; 253
 a0a:	8e bd       	out	0x2e, r24	; 46
 a0c:	8e b5       	in	r24, 0x2e	; 46
 a0e:	84 60       	ori	r24, 0x04	; 4
 a10:	8e bd       	out	0x2e, r24	; 46
 a12:	82 81       	ldd	r24, Z+2	; 0x02
 a14:	82 30       	cpi	r24, 0x02	; 2
 a16:	59 f0       	breq	.+22     	; 0xa2e <TIMER1_Init+0x12a>
 a18:	83 30       	cpi	r24, 0x03	; 3
 a1a:	81 f0       	breq	.+32     	; 0xa3c <TIMER1_Init+0x138>
 a1c:	81 11       	cpse	r24, r1
 a1e:	14 c0       	rjmp	.+40     	; 0xa48 <TIMER1_Init+0x144>
 a20:	8f b5       	in	r24, 0x2f	; 47
 a22:	8f 7b       	andi	r24, 0xBF	; 191
 a24:	8f bd       	out	0x2f, r24	; 47
 a26:	8f b5       	in	r24, 0x2f	; 47
 a28:	8f 77       	andi	r24, 0x7F	; 127
 a2a:	8f bd       	out	0x2f, r24	; 47
 a2c:	0d c0       	rjmp	.+26     	; 0xa48 <TIMER1_Init+0x144>
 a2e:	8f b5       	in	r24, 0x2f	; 47
 a30:	8f 7b       	andi	r24, 0xBF	; 191
 a32:	8f bd       	out	0x2f, r24	; 47
 a34:	8f b5       	in	r24, 0x2f	; 47
 a36:	80 68       	ori	r24, 0x80	; 128
 a38:	8f bd       	out	0x2f, r24	; 47
 a3a:	06 c0       	rjmp	.+12     	; 0xa48 <TIMER1_Init+0x144>
 a3c:	8f b5       	in	r24, 0x2f	; 47
 a3e:	8f 7b       	andi	r24, 0xBF	; 191
 a40:	8f bd       	out	0x2f, r24	; 47
 a42:	8f b5       	in	r24, 0x2f	; 47
 a44:	8f 77       	andi	r24, 0x7F	; 127
 a46:	8f bd       	out	0x2f, r24	; 47
 a48:	29 b7       	in	r18, 0x39	; 57
 a4a:	97 81       	ldd	r25, Z+7	; 0x07
 a4c:	89 2f       	mov	r24, r25
 a4e:	90 e0       	ldi	r25, 0x00	; 0
 a50:	88 0f       	add	r24, r24
 a52:	99 1f       	adc	r25, r25
 a54:	88 0f       	add	r24, r24
 a56:	99 1f       	adc	r25, r25
 a58:	82 2b       	or	r24, r18
 a5a:	89 bf       	out	0x39, r24	; 57
 a5c:	08 95       	ret

00000a5e <TIMER1_TOVInt_SetCallBack>:
 a5e:	90 93 b6 00 	sts	0x00B6, r25	; 0x8000b6 <Timer1TovIntFunPtr+0x1>
 a62:	80 93 b5 00 	sts	0x00B5, r24	; 0x8000b5 <Timer1TovIntFunPtr>
 a66:	08 95       	ret

00000a68 <__vector_7>:
 a68:	1f 92       	push	r1
 a6a:	0f 92       	push	r0
 a6c:	0f b6       	in	r0, 0x3f	; 63
 a6e:	0f 92       	push	r0
 a70:	11 24       	eor	r1, r1
 a72:	2f 93       	push	r18
 a74:	3f 93       	push	r19
 a76:	4f 93       	push	r20
 a78:	5f 93       	push	r21
 a7a:	6f 93       	push	r22
 a7c:	7f 93       	push	r23
 a7e:	8f 93       	push	r24
 a80:	9f 93       	push	r25
 a82:	af 93       	push	r26
 a84:	bf 93       	push	r27
 a86:	ef 93       	push	r30
 a88:	ff 93       	push	r31
 a8a:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <Timer1Oc1aIntFunPtr>
 a8e:	f0 91 ba 00 	lds	r31, 0x00BA	; 0x8000ba <Timer1Oc1aIntFunPtr+0x1>
 a92:	09 95       	icall
 a94:	ff 91       	pop	r31
 a96:	ef 91       	pop	r30
 a98:	bf 91       	pop	r27
 a9a:	af 91       	pop	r26
 a9c:	9f 91       	pop	r25
 a9e:	8f 91       	pop	r24
 aa0:	7f 91       	pop	r23
 aa2:	6f 91       	pop	r22
 aa4:	5f 91       	pop	r21
 aa6:	4f 91       	pop	r20
 aa8:	3f 91       	pop	r19
 aaa:	2f 91       	pop	r18
 aac:	0f 90       	pop	r0
 aae:	0f be       	out	0x3f, r0	; 63
 ab0:	0f 90       	pop	r0
 ab2:	1f 90       	pop	r1
 ab4:	18 95       	reti

00000ab6 <__vector_8>:
 ab6:	1f 92       	push	r1
 ab8:	0f 92       	push	r0
 aba:	0f b6       	in	r0, 0x3f	; 63
 abc:	0f 92       	push	r0
 abe:	11 24       	eor	r1, r1
 ac0:	2f 93       	push	r18
 ac2:	3f 93       	push	r19
 ac4:	4f 93       	push	r20
 ac6:	5f 93       	push	r21
 ac8:	6f 93       	push	r22
 aca:	7f 93       	push	r23
 acc:	8f 93       	push	r24
 ace:	9f 93       	push	r25
 ad0:	af 93       	push	r26
 ad2:	bf 93       	push	r27
 ad4:	ef 93       	push	r30
 ad6:	ff 93       	push	r31
 ad8:	e0 91 b7 00 	lds	r30, 0x00B7	; 0x8000b7 <Timer1Oc1bIntFunPtr>
 adc:	f0 91 b8 00 	lds	r31, 0x00B8	; 0x8000b8 <Timer1Oc1bIntFunPtr+0x1>
 ae0:	09 95       	icall
 ae2:	ff 91       	pop	r31
 ae4:	ef 91       	pop	r30
 ae6:	bf 91       	pop	r27
 ae8:	af 91       	pop	r26
 aea:	9f 91       	pop	r25
 aec:	8f 91       	pop	r24
 aee:	7f 91       	pop	r23
 af0:	6f 91       	pop	r22
 af2:	5f 91       	pop	r21
 af4:	4f 91       	pop	r20
 af6:	3f 91       	pop	r19
 af8:	2f 91       	pop	r18
 afa:	0f 90       	pop	r0
 afc:	0f be       	out	0x3f, r0	; 63
 afe:	0f 90       	pop	r0
 b00:	1f 90       	pop	r1
 b02:	18 95       	reti

00000b04 <__vector_9>:
 b04:	1f 92       	push	r1
 b06:	0f 92       	push	r0
 b08:	0f b6       	in	r0, 0x3f	; 63
 b0a:	0f 92       	push	r0
 b0c:	11 24       	eor	r1, r1
 b0e:	2f 93       	push	r18
 b10:	3f 93       	push	r19
 b12:	4f 93       	push	r20
 b14:	5f 93       	push	r21
 b16:	6f 93       	push	r22
 b18:	7f 93       	push	r23
 b1a:	8f 93       	push	r24
 b1c:	9f 93       	push	r25
 b1e:	af 93       	push	r26
 b20:	bf 93       	push	r27
 b22:	ef 93       	push	r30
 b24:	ff 93       	push	r31
 b26:	e0 91 b5 00 	lds	r30, 0x00B5	; 0x8000b5 <Timer1TovIntFunPtr>
 b2a:	f0 91 b6 00 	lds	r31, 0x00B6	; 0x8000b6 <Timer1TovIntFunPtr+0x1>
 b2e:	09 95       	icall
 b30:	ff 91       	pop	r31
 b32:	ef 91       	pop	r30
 b34:	bf 91       	pop	r27
 b36:	af 91       	pop	r26
 b38:	9f 91       	pop	r25
 b3a:	8f 91       	pop	r24
 b3c:	7f 91       	pop	r23
 b3e:	6f 91       	pop	r22
 b40:	5f 91       	pop	r21
 b42:	4f 91       	pop	r20
 b44:	3f 91       	pop	r19
 b46:	2f 91       	pop	r18
 b48:	0f 90       	pop	r0
 b4a:	0f be       	out	0x3f, r0	; 63
 b4c:	0f 90       	pop	r0
 b4e:	1f 90       	pop	r1
 b50:	18 95       	reti

00000b52 <__tablejump2__>:
 b52:	ee 0f       	add	r30, r30
 b54:	ff 1f       	adc	r31, r31
 b56:	05 90       	lpm	r0, Z+
 b58:	f4 91       	lpm	r31, Z
 b5a:	e0 2d       	mov	r30, r0
 b5c:	09 94       	ijmp

00000b5e <_exit>:
 b5e:	f8 94       	cli

00000b60 <__stop_program>:
 b60:	ff cf       	rjmp	.-2      	; 0xb60 <__stop_program>
